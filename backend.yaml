- name: backend setup
  hosts: backend
  become: yes
  tasks:
  - name: disable nodejs:16
    ansible.builtin.command: dnf module disable nodejs -y
  
  - name: enable nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs package
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
      - nodejs
      - mysql
  
  - name: create a expense user
    ansible.builtin.user:
      name: expense
  
  - name: add directory
    ansible.builtin.file:
    path: /app
    state: directory

  - name: download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
  
  - name: unzip backend file
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    community.general.npm:
      path: /app

  - name: copy the service file
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
  
  - name: install mysql and crypto libraries
    ansible.builtin.package:
      name: "{{ item }}"
      executable: pip3.9
    loop:
      - PyMySQL
      - cryptography

  - name: import mysql data
    community.mysql.mysql_db:
      state: import
      name: all
      login_user: root
      login_password: ExpenseApp@1
      login_host: database.durgam.online
      target: /app/schema/backend.sql
  
  - name: daemon reload and restart service
    ansible.builtin.systemd_service:
      name: backend
      state: restarted
      enabled: yes
      daemon_reload: true
      
